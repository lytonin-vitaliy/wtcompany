import './styles/style.scss'

document.addEventListener("DOMContentLoaded", () => {
    const modal = document.getElementById("leadModal");

    // ======== –õ–æ–≥–∏–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∏ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ ========
    document.querySelectorAll('.btn--primary').forEach(btn => {
        if (!btn.closest('.modal')) {
            btn.addEventListener('click', (e) => {
                e.preventDefault();
                modal.classList.add('active');
            });
        }
    });

    modal.addEventListener('click', (e) => {
        if (e.target.matches('[data-modal-close], .modal__overlay')) {
            modal.classList.remove('active');
        }
    });

    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            modal.classList.remove('active');
        }
    });

    // ======== Formspree (AJAX-–æ—Ç–ø—Ä–∞–≤–∫–∞ –±–µ–∑ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞) ========
    const form = modal.querySelector('form'); // –Ω–∞—Ö–æ–¥–∏–º —Ñ–æ—Ä–º—É –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª–∫–∏
    const status = document.createElement('p');
    status.className = 'modal__status';
    form.appendChild(status);

    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        status.textContent = "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...";

        const data = new FormData(form);

        try {
            const response = await fetch(form.action, {
                method: form.method,
                body: data,
                headers: { 'Accept': 'application/json' }
            });

            if (response.ok) {
                status.textContent = "–°–ø–∞—Å–∏–±–æ! –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚úÖ";
                form.reset();

                // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => {
                    modal.classList.remove('active');
                    status.textContent = ""; // –æ—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç
                }, 2000);
            } else {
                status.textContent = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ üòï";
            }
        } catch (error) {
            status.textContent = "–°–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ üò¨";
        }
    });
});



document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector(".user-form__body");

    if (form) {
        form.addEventListener("submit", async (e) => {
            e.preventDefault(); // –Ω–µ –¥–∞—ë–º —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è

            const formData = new FormData(form);
            const submitButton = form.querySelector(".user-form__button");

            submitButton.disabled = true;
            submitButton.textContent = "–û—Ç–ø—Ä–∞–≤–∫–∞...";

            try {
                const response = await fetch(form.action, {
                    method: form.method,
                    body: formData,
                    headers: { Accept: "application/json" },
                });

                if (response.ok) {
                    // –æ—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
                    form.reset();
                    submitButton.textContent = "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ";
                } else {
                    submitButton.textContent = "–û—à–∏–±–∫–∞ üòï";
                    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", response.statusText);
                }
            } catch (error) {
                submitButton.textContent = "–û—à–∏–±–∫–∞ üòï";
                console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", error);
            }

            setTimeout(() => {
                submitButton.disabled = false;
                submitButton.textContent = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å";
            }, 3000);
        });
    }
});

